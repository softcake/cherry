/*
 * Copyright 2017 softcake.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if (project in benchmarkModules) {
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'me.champeau.gradle.jmh'

    configurations.jmh.dependencies.clear()

    idea.module {
        scopes.TEST.plus.add(configurations.jmh)
    }

    dependencies {
        compile files("$buildDir/jmh-generated-classes/")
    }

    tasks.jmh {
        group = 'Benchmarks'
        description = 'Executes a Java microbenchmark'
    }

     jmhJar {
         mergeServiceFiles()
     }

    jmh {
        jmhVersion = tool_versions.jmh

        // Benchmark mode: Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss,
        // All/all
        benchmarkMode = ['thrpt']

        // Available time units are: [m, s, ms, us, ns]
        timeUnit = 's'

        // Charts: http://nilskp.github.io/jmh-charts
        resultFormat = 'json'
        resultsFile = file("${buildDir}/reports/jmh/results.json")
        //humanOutputFile = file("${buildDir}/reports/jmh/human.txt")
        duplicateClassesStrategy = 'warn'
        includeTests = false
        jvmArgs = '-server -Xmx2G -XX:+UseG1GC -XX:-UseBiasedLocking'
        synchronizeIterations = false
        threads = 2
        warmupIterations = 10
        failOnError = true
        iterations = 10
        forceGC = true
        fork = 4
    }

    if (!project.isCi) {
        build.dependsOn jmhCompileGeneratedClasses
    }

}

