<?xml version="1.0"?>
<!--
  ~ Copyright 2017 softcake.org.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License").
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset name="softcake"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <rule ref="rulesets/java/basic.xml">
        <exclude name="AvoidBranchingStatementAsLastInLoop"/>
    </rule>

    <rule ref="rulesets/java/braces.xml"/>

    <rule ref="rulesets/java/clone.xml"/>

    <rule ref="rulesets/java/codesize.xml">
        <exclude name="NcssTypeCount"/>
        <exclude name="TooManyMethods"/>
        <exclude name="ExcessivePublicCount"/>
        <exclude name="ExcessiveClassLength"/>
        <exclude name="ExcessiveMethodLength"/>

        <exclude name="NPathComplexity"/>
        <exclude name="CyclomaticComplexity"/>
        <exclude name="StdCyclomaticComplexity"/>
        <exclude name="ModifiedCyclomaticComplexity"/>
    </rule>

    <rule ref="rulesets/java/comments.xml">
        <exclude name="CommentSize"/>
        <exclude name="CommentRequired"/>
        <exclude name="CommentDefaultAccessModifier"/>
    </rule>

    <rule ref="rulesets/java/coupling.xml">
        <exclude name="LawOfDemeter"/>
        <exclude name="ExcessiveImports"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="CouplingBetweenObjects"/>
    </rule>

    <rule ref="rulesets/java/design.xml">
        <exclude name="AccessorClassGeneration"/>
        <exclude name="GodClass"/>
        <exclude name="UseVarargs"/>
        <exclude name="ImmutableField"/>
        <exclude name="ConfusingTernary"/>
        <exclude name="OptimizableToArrayCall"/>
        <exclude name="CompareObjectsWithEquals"/>
        <exclude name="UncommentedEmptyMethodBody"/>
        <exclude name="AvoidReassigningParameters"/>
        <exclude name="UncommentedEmptyConstructor"/>
        <exclude name="UnnecessaryLocalBeforeReturn"/>
        <exclude name="UseLocaleWithCaseConversions"/>
        <exclude name="AvoidSynchronizedAtMethodLevel"/>
        <exclude name="ConstructorCallsOverridableMethod"/>
        <exclude name="PositionLiteralsFirstInComparisons"/>
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass"/>
        <exclude name="EmptyMethodInAbstractClassShouldBeAbstract"/>
        <exclude name="PositionLiteralsFirstInCaseInsensitiveComparisons"/>


    </rule>
    <rule ref="rulesets/java/design.xml/ConfusingTernary">
        <properties>
            <property name="ignoreElseIf" value="true"/>
        </properties>
    </rule>

    <rule ref="rulesets/java/empty.xml">
        <exclude name="EmptyWhileStmt"/>
    </rule>

    <rule ref="rulesets/java/finalizers.xml"/>

    <rule ref="rulesets/java/imports.xml">
        <exclude name="DontImportJavaLang"/>
        <exclude name="TooManyStaticImports"/>
    </rule>

    <rule ref="rulesets/java/naming.xml">
        <exclude name="LongVariable"/>
        <exclude name="ShortVariable"/>
        <exclude name="ShortClassName"/>
        <exclude name="AbstractNaming"/>
        <exclude name="VariableNamingConventions"/>
        <exclude name="AvoidFieldNameMatchingMethodName"/>
        <exclude name="MethodNamingConventions"/>
    </rule>

    <rule ref="rulesets/java/optimizations.xml">
        <exclude name="PrematureDeclaration"/>
        <exclude name="LocalVariableCouldBeFinal"/>
        <exclude name="MethodArgumentCouldBeFinal"/>
        <exclude name="AvoidInstantiatingObjectsInLoops"/>
    </rule>

    <rule ref="rulesets/java/strictexception.xml">
        <exclude name="AvoidCatchingThrowable"/>
        <exclude name="AvoidRethrowingException"/>
        <exclude name="AvoidCatchingGenericException"/>
        <exclude name="AvoidThrowingRawExceptionTypes"/>
    </rule>

    <rule ref="rulesets/java/strings.xml">
        <exclude name="AvoidDuplicateLiterals"/>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
        <properties>
            <property name="skipAnnotations" value="true"/>
        </properties>
    </rule>

    <rule ref="rulesets/java/sunsecure.xml"/>

    <rule ref="rulesets/java/typeresolution.xml"/>

    <rule ref="rulesets/java/unnecessary.xml">
        <exclude name="UselessParentheses"/>
    </rule>

    <rule ref="rulesets/java/unusedcode.xml">
        <exclude name="UnusedPrivateMethod"/>
    </rule>


    <rule ref="rulesets/java/controversial.xml">
        <exclude name="AvoidFinalLocalVariable"/>
        <exclude name="AtLeastOneConstructor"/>
        <exclude name="DataflowAnomalyAnalysis"/>
        <exclude name="NullAssignment"/>
    </rule>
</ruleset>
